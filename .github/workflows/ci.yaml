on: push
name: "CI"
jobs:
  operator:
    name: "Operator"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v2-beta
        with:
          go-version: "1.13"
      - name: "Lint Operator Go Code"
        run: |
          cd operator/
          go fmt ./...
          go vet ./...
      - name: "Build'n Push Operator"
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          repository: j12934/securecodebox/operator
          tag_with_ref: true
          registry: docker.pkg.github.com
          path: ./operator/
  lurcher:
    name: "Lurcher"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v2-beta
        with:
          go-version: "1.13"
      - name: "Lint Lurcher Go Code"
        run: |
          cd operator/
          go fmt ./...
          go vet ./...
      - uses: docker/build-push-action@v1
        name: "Build & Push Lurcher Image"
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          repository: j12934/securecodebox/lurcher
          tag_with_ref: true
          registry: docker.pkg.github.com
          path: ./lurcher/
  integrations:
    name: "Node Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: "list files and folders"
        run: ls
      - name: "Install npm dependencies in all parser sub projects"
        run: |
          for dir in integrations/*/parser/
          do
              cd $dir
              if [ -f package.json ] && [ -f package-lock.json ]; then
                  echo "Installing dependencies for $dir"
                  npm ci
              fi
              # cd back
              cd -
          done
      - name: "Install npm dependencies in all persistence sub projects"
        run: |
          for dir in persistence/*/
          do
              cd $dir
              if [ -f package.json ] && [ -f package-lock.json ]; then
                  echo "Installing dependencies for $dir"
                  npm ci
              fi
              # cd back
              cd -
          done
      - name: "Install npm test dependencies"
        run: |
          npm ci
          cd integrations/
          npm ci
          cd ../scbctl/
          npm ci
      - name: "Run tests"
        run: |
          npm test -- --ci --colors --coverage
  parserImages:
    name: "Build Parser Images"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      # SDK
      - uses: docker/build-push-action@v1
        name: "Build & Push Parser SDK"
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          repository: j12934/securecodebox/parser-sdk-nodejs
          registry: docker.pkg.github.com
          path: ./parser-sdk/nodejs/
          tag_with_ref: true
      # Actual Parsers
      - uses: docker/build-push-action@v1
        name: "Build & Push Amass Parser Image"
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          repository: j12934/securecodebox/parser-amass
          registry: docker.pkg.github.com
          path: ./integrations/amass/parser/
          tag_with_ref: true
      - uses: docker/build-push-action@v1
        name: "Build & Push Nmap Parser Image"
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          repository: j12934/securecodebox/parser-nmap
          registry: docker.pkg.github.com
          path: ./integrations/nmap/parser/
          tag_with_ref: true
      - uses: docker/build-push-action@v1
        name: "Build & Push ssh_scan Parser Image"
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          repository: j12934/securecodebox/parser-ssh-scan
          registry: docker.pkg.github.com
          path: ./integrations/ssh_scan/parser/
          tag_with_ref: true
      - uses: docker/build-push-action@v1
        name: "Build & Push OWASP Zap Parser Image"
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          repository: j12934/securecodebox/parser-zap
          registry: docker.pkg.github.com
          path: ./integrations/zap/parser/
          tag_with_ref: true
