on: push
name: 'CI'
jobs:
  operator:
    name: 'Operator'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v2-beta
        with:
          go-version: '1.13'
      - name: 'List go version'
        run: 'go version'
      - name: 'Run Lint'
        run: |
          cd operator/
          go fmt ./...
          go vet ./...
      - name: "Build'n Push Operator"
        uses: docker://j12934/one-click-docker@sha256:c0c3c90aa2fe65c0ffad0cf892aec9ea4dcc4731c1b2ccc0f3d4c8eacc4fb917
        env:
          DOCKER_IMAGE_NAME: operator
          DOCKER_REGISTRY_URL: docker.pkg.github.com
          DOCKER_NAMESPACE: j12934/securecodebox
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        with:
          args: ./operator/
      - uses: actions/delete-package-versions@v1
        name: 'Delete oldest operator image tag'
        with:
          package-name: operator
          num-old-versions-to-delete: 1
  lurcher:
    name: 'Lurcher'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v2-beta
        with:
          go-version: '1.13'
      - name: 'List go version'
        run: 'go version'
      - name: 'Run Lint'
        run: |
          cd operator/
          go fmt ./...
          go vet ./...
      - name: "Build'n Push Lurcher"
        uses: docker://j12934/one-click-docker@sha256:c0c3c90aa2fe65c0ffad0cf892aec9ea4dcc4731c1b2ccc0f3d4c8eacc4fb917
        env:
          DOCKER_IMAGE_NAME: lurcher
          DOCKER_REGISTRY_URL: docker.pkg.github.com
          DOCKER_NAMESPACE: j12934/securecodebox
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        with:
          args: ./lurcher/
      - uses: actions/delete-package-versions@v1
        name: 'Delete oldest lurcher image tag'
        with:
          package-name: lurcher
          num-old-versions-to-delete: 1
  integrations:
    name: 'Node Unit Tests'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: 'list files and folders'
        run: ls
      - name: 'Install npm dependencies in all parser sub projects'
        run: |
          for dir in integrations/*/parser/
          do
              cd $dir
              if [ -f package.json ] && [ -f package-lock.json ]; then
                  echo "Installing dependencies for $dir"
                  npm ci
              fi
              # cd back
              cd -
          done
      - name: 'Install npm test dependencies'
        run: |
          cd integrations/
          npm ci
      - name: 'Run tests'
        run: |
          npm test -- --ci --colors --coverage
