apiVersion: batch/v1
kind: Job
metadata:
  name: lurcher-test
spec:
  backoffLimit: 4
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: primary
          image: alpine
          command: ['sleep', '5']
        - name: lurcher
          image: docker.pkg.github.com/securecodebox/securecodebox-v2-alpha/lurcher:go-version
          imagePullPolicy: IfNotPresent
          args:
            - '--container'
            - 'primary'
            - '--file'
            - '/home/securecodebox/result.xml'
            - '--url'
            # This URL has been expired for quite some time ;) To test this you'll need to generate a new one.
            - 'https://fra1.digitaloceanspaces.com/securecodebox/scan/result.xml?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=NWN2DEMTNFQUTQB5SZ6A%2F20200312%2Ffra1%2Fs3%2Faws4_request&X-Amz-Date=20200312T180859Z&X-Amz-Expires=43200&X-Amz-SignedHeaders=host&X-Amz-Signature=852dc4576ff5b6195b9f6a7dd49851cc701a2fb59fb23db6e7c7913f412f0460'
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lurcher
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: 'default'
  name: lurcher
rules:
  - apiGroups: ['']
    resources: ['pods']
    verbs: ['get']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: lurcher
  namespace: default
subjects:
  - kind: ServiceAccount
    name: lurcher
roleRef:
  kind: Role
  name: lurcher
  apiGroup: rbac.authorization.k8s.io
