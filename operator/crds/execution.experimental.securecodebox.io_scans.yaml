
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: scans.execution.experimental.securecodebox.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.uid
    description: K8s Resource UID
    name: UID
    priority: 1
    type: string
  - JSONPath: .spec.scanType
    description: Scan Type
    name: Type
    type: string
  - JSONPath: .status.state
    description: Scan State
    name: State
    type: string
  - JSONPath: .status.findings.count
    description: Total Finding Count
    name: Findings
    type: string
  - JSONPath: .spec.parameters
    description: Arguments passed to the Scanner
    name: Parameters
    priority: 1
    type: string
  group: execution.experimental.securecodebox.io
  names:
    kind: Scan
    listKind: ScanList
    plural: scans
    singular: scan
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Scan is the Schema for the scans API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ScanSpec defines the desired state of Scan
          properties:
            cascades:
              description: A label selector is a label query over a set of resources.
                The result of matchLabels and matchExpressions are ANDed. An empty
                label selector matches all objects. A null label selector matches
                no objects.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            parameters:
              items:
                type: string
              type: array
            scanType:
              type: string
          type: object
        status:
          description: ScanStatus defines the observed state of Scan
          properties:
            errorDescription:
              type: string
            findings:
              description: FindingStats contains the general stats about the results
                of the scan
              properties:
                categories:
                  additionalProperties:
                    format: int64
                    type: integer
                  description: FindingCategories indicates the count of finding broken
                    down by their categories
                  type: object
                count:
                  description: Count indicates how many findings were identified in
                    total
                  format: int64
                  type: integer
                severities:
                  description: FindingSeverities indicates the count of finding with
                    the respective severity
                  properties:
                    high:
                      format: int64
                      type: integer
                    informational:
                      format: int64
                      type: integer
                    low:
                      format: int64
                      type: integer
                    medium:
                      format: int64
                      type: integer
                  type: object
              type: object
            rawResultFile:
              description: RawResultFile Filename of the result file of the scanner.
                e.g. `nmap-result.xml`
              type: string
            rawResultType:
              description: RawResultType determines which kind of ParseDefinition
                will be used to turn the raw results of the scanner into findings
              type: string
            readAndWriteHookStatus:
              items:
                properties:
                  hookName:
                    type: string
                  jobName:
                    type: string
                  state:
                    description: HookState Describes the State of a Hook on a Scan
                    type: string
                required:
                - hookName
                - state
                type: object
              type: array
            state:
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
